#------------------------------------------------------------------------------------------------------
# 2016 Sep23 ReReco JSON file
#------------------------------------------------------------------------------------------------------
JSON /afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions16/13TeV/ReReco/Final/Cert_271036-284044_13TeV_23Sep2016ReReco_Collisions16_JSON.txt
#-----------------------------------------------------------------------------------------------------------------------------
# Pileup files for applying pileup re-weighting
#-----------------------------------------------------------------------------------------------------------------------------
PILEUP_MC_TXT_FILE /afs/cern.ch/work/s/scooper/public/Leptoquarks/Pileup2016/Moriond17MC_PoissonOOTPU.txt
PILEUP_DATA_ROOT_FILE /afs/cern.ch/user/s/scooper/work/public/Leptoquarks/Pileup2016/DataPileupHistogram_2016dec13.root
#
#############################     Example of file with list of cuts
#
#
#------------------------ Preliminary cut variables and values (cut level -1) here -----------------------------
# This first list of variable names and values are used to pass configurable values to the user code associated
# to a variable name.
# The user can retrieve the values associated to a variable name via a provided function call
# [e.g. getPreCutValue1("eleFidRegion") and similarly for value2, value3 and value4 ]
# The idea is that the user can use these values to define the list of objects (electrons, jets, etc.) used in
# analysis. No cut is automatically evaluated on these variables and the cut level must be equal to -1.
# Variable names must be unique.
#
#VariableName         value1            value2          value3          value4          level
#------------         ------------      -------------   ------------    -------------   -----
produceSkim          1                 -               -               -               -1
#-----------------------------------------------------------------------------------------------------------------------------
# Preselection cuts
#-----------------------------------------------------------------------------------------------------------------------------
eleEta_bar            	1.4442        -                    -               -               -1
eleEta_end1            	1.560        2.0                  -               -               -1
eleEta_end2            	2.000        2.5                  -               -               -1
#-----------------------------------------------------------------------------------------------------------------------------
# Fake rates
#-----------------------------------------------------------------------------------------------------------------------------
#QCDFakeRateFileName		/afs/cern.ch/user/s/scooper/work/public/Leptoquarks/qcd_fake_rate/2016/FRHistogram2D2Jet.root	- - - -1
QCDFakeRateFileName		/afs/cern.ch/user/s/scooper/work/public/Leptoquarks/qcd_fake_rate/2016/FR2D2JetScEt.root	- - - -1
#QCD_fit_func_version	1				-	  -		  -		  -1
#QCD_barrel_plot		hist_Bar_2Jet_Pt1stEle_PAS	-	  -		  -		  -1
#QCD_endcap1_plot	hist_End1_2Jet_Pt1stEle_PAS	-	  -		  -		  -1
#QCD_endcap2_plot	hist_End2_2Jet_Pt1stEle_PAS	-	  -		  -		  -1
# 
#--------------------------------- Cuts (level 0,1,2,3 ... n) below --------------------------------------------
# The cut variable names, cut boundaries and histogram binnings are provided here by the user.
# In the event loop of the analysisClass_template.C, the user have to fill each variable with its value using
# a provided function call [ e.g. fillVariableWithValue("nEleFinal", number_of_electrons) ]
# The variable names in the user code has to match the names provided here.
# Variable names must be unique.
# The cut will be declared "passed" if
#    ( minValue1 < VariableName <= maxValue1 )
# in case only the first range (minValue1, maxValue1) is provided,
# otherwise the cut will be declared "passed" if
#    ( minValue1 < VariableName <= maxValue1 )  OR  ( minValue2 < VariableName <= maxValue2 )
# in case even the second range (minValue2, maxValue2) is provided.
# The level of the cut (0,1,2 ... n) is provided by the user and can be used in the code to easily determine if
# groups of same-level cuts have passed or failed.
#
#VariableName                   minValue1(<) maxValue1(>=)      minValue2(<)    maxValue2(>=)   level   histoNbinsMinMax      OptionalFlag
#------------                   ------------ -------------      ------------    -------------   -----   ----------------      ------------
#-----------------------------------------------------------------------------------------------------------------------------
#                          _           _   _             
# _ __  _ __ ___  ___  ___| | ___  ___| |_(_) ___  _ __  
#| '_ \| '__/ _ \/ __|/ _ \ |/ _ \/ __| __| |/ _ \| '_ \ 
#| |_) | | |  __/\__ \  __/ |  __/ (__| |_| | (_) | | | |
#| .__/|_|  \___||___/\___|_|\___|\___|\__|_|\___/|_| |_|
#|_|                    
#-----------------------------------------------------------------------------------------------------------------------------
Reweighting			0	     1			-		-		0	2 -0.5 1.5	     
PassJSON		  	0            1			-               -               0       2 -0.5 1.5	     
PassGlobalTightHalo2016Filter		0	     1			-		-		0	2 -0.5 1.5
PassGoodVertices	        0	     1			-		-		0	2 -0.5 1.5
PassHBHENoiseFilter    		0	     1			-		-		0	2 -0.5 1.5
PassHBHENoiseIsoFilter    		0	     1			-		-		0	2 -0.5 1.5
PassBadEESupercrystalFilter     0	     1			-		-		0	2 -0.5 1.5
PassEcalDeadCellTrigPrim     0	     1			-		-		0	2 -0.5 1.5
PassChargedCandidateFilter     0	     1			-		-		0	2 -0.5 1.5
PassBadPFMuonFilter     0	     1			-		-		0	2 -0.5 1.5
#PassNEle 			0            1			-               -               1       11 -0.5 10.5	      
#PassNMuon			0            1			-               -               1       16 -0.5 15.5          
nEle_hltMatched			-inf	     +inf		-		-		1	3 -0.5 2.5 
nJet_hltMatched			-inf	     +inf		-		-		1	3 -0.5 2.5 
#Ele1_PtHeep				50	     +inf		-		-		1	200 0 2000	      
#Ele2_PtHeep				50	     +inf		-		-		1	200 0 2000	      
nJet				-inf	     +inf		-               -               1       16 -0.5 15.5	      
Jet1_Pt				50	     +inf		-		-		1	200 0 2000	      
Jet1_Eta			-2.4         2.4		-               -               1       100 -5 5	      
Jet2_Pt				50	     +inf		-		-		1	200 0 2000	      
Jet2_Eta			-2.4         2.4                -               -               1       100 -5 5	      
DR_Ele1Jet1			-inf	     +inf		-		-		1	100 0 10              
DR_Ele1Jet2			-inf	     +inf		-		-		1	100 0 10	      
DR_Ele2Jet1			-inf	     +inf		-		-		1	100 0 10              
DR_Ele2Jet2			-inf	     +inf		-		-		1	100 0 10	      
DR_Jet1Jet2			-inf	     +inf		-		-		1	100 0 10	  
sT_eejj				300	     +inf		-		-		1	200 0 2000
M_e1e2				50	     +inf               -               -               1       200 0 2000
#-----------------------------------------------------------------------------------------------------------------------------
# Optimization variables (unused)
#-----------------------------------------------------------------------------------------------------------------------------
sT_eejj_opt                     -inf         +inf               -               -               1       200 0 2000
M_e1e2_opt                      -inf         +inf               -               -               1       200 0 2000
Mej_min_opt                     -inf         +inf               -               -               1       200 0 2000 	       
#-----------------------------------------------------------------------------------------------------------------------------
