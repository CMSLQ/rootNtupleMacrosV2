# 2011 JSON file
JSON /afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/Prompt/Cert_160404-165970_7TeV_PromptReco_Collisions11_JSON.txt
# Pileup reweighting files --> FOR SKIM: COMMENT THE FOLLOWING TWO LINES
PILEUP_DATA_ROOT_FILE /afs/cern.ch/user/e/eberry/public/LQ_PILEUP/pileup_all.root
PILEUP_MC_TXT_FILE    /afs/cern.ch/user/e/eberry/public/LQ_PILEUP/pileup_mc_pdf_file.txt
#
#############################     Example of file with list of cuts
#
#
#------------------------ Preliminary cut variables and values (cut level -1) here -----------------------------
# This first list of variable names and values are used to pass configurable values to the user code associated
# to a variable name.
# The user can retrieve the values associated to a variable name via a provided function call
# [e.g. getPreCutValue1("eleFidRegion") and similarly for value2, value3 and value4 ]
# The idea is that the user can use these values to define the list of objects (electrons, jets, etc.) used in
# analysis. No cut is automatically evaluated on these variables and the cut level must be equal to -1.
# Variable names must be unique.
#
#VariableName         value1            value2          value3          value4          level
#------------         ------------      -------------   ------------    -------------   -----
#FOR SKIM: UNCOMMENT THE FOLLOWING LINE
#produceSkim           1                 -               -               -               -1
PDGID_axigluon	       9000021		 -		 -		 -		 -1
PDGID_W		       24		 -24		 -		 -		 -1
PDGID_ELE_MU_TAU       11		 13		 15		 -		 -1
PDGID_NU_ELE_MU_TAU    12		 14		 16		 -		 -1
PDGID_D		       1		 -1		 -		 -		 -1
PDGID_U		       2		 -2		 -		 -		 -1
PDGID_S		       3		 -3		 -		 -		 -1
PDGID_C		       4		 -4		 -		 -		 -1
PDGID_B		       5		 -5		 -		 -		 -1
PDGID_T		       6		 -6		 -		 -		 -1
#
#
#--------------------------------- Cuts (level 0,1,2,3 ... n) below --------------------------------------------
# The cut variable names, cut boundaries and histogram binnings are provided here by the user.
# In the event loop of the analysisClass_template.C, the user have to fill each variable with its value using
# a provided function call [ e.g. fillVariableWithValue("nEleFinal", number_of_electrons) ]
# The variable names in the user code has to match the names provided here.
# Variable names must be unique.
# The cut will be declared "passed" if
#    ( minValue1 < VariableName <= maxValue1 )
# in case only the first range (minValue1, maxValue1) is provided,
# otherwise the cut will be declared "passed" if
#    ( minValue1 < VariableName <= maxValue1 )  OR  ( minValue2 < VariableName <= maxValue2 )
# in case even the second range (minValue2, maxValue2) is provided.
# The level of the cut (0,1,2 ... n) is provided by the user and can be used in the code to easily determine if
# groups of same-level cuts have passed or failed.
#
#VariableName                   minValue1(<) maxValue1(>=)      minValue2(<)    maxValue2(>=)   level   histoNbinsMinMax
#------------                   ------------ -------------      ------------    -------------   -----   ----------------
PassJSON			0            1                  -               -               0       2 -0.5 1.5
#
#nEle_all                        -inf         +inf               -               -               1       16 -0.5 15.5
#MET                             45           +inf               -               -               1       200 0 1000
#
#---------------------------------------- Cut Optimizer --------------------------------------------------
#VariableName                   must be OPT   > or <    RangeMin        RangeMax        unused
#------------                   -----------   ------    ------------    -------------   ------
#sT                              OPT           >         450             540             1
#maxMEtaJets_noOvrlp_ID          OPT           <         1.2             3.0             1
